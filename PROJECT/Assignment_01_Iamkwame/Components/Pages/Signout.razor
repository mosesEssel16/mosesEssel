@page "/Signout"
@layout LoginLayout
@using Assignment_01_Iamkwame.Shared
@inject NavigationManager Navigation
@using System.ComponentModel.DataAnnotations

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="favicon.png">

    <title>Signin</title>

    <!-- Bootstrap core CSS -->
    <link href="bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="signin.css" rel="stylesheet">
</head>

<body class="text-center">
    <EditForm Model="@this" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <img class="mb-4" src="logo.png" alt="" width="72" height="72">
        <h1 class="h3 mb-3 font-weight-normal">Please sign in</h1>
        
        <div class="form-group">
            <label for="inputEmail" class="sr-only">Email address</label>
            <InputText @bind-Value="Email" id="inputEmail" class="form-control" placeholder="Email address" required autofocus />
        </div>
        
        <div class="form-group">
            <label for="inputPassword" class="sr-only">Password</label>
            <InputText @bind-Value="Password" type="password" id="inputPassword" class="form-control" placeholder="Password" required />
        </div>
        
        <div class="checkbox mb-3">
            <label>
                <input type="checkbox" @bind="RememberMe"> Remember me
            </label>
        </div>

        <NavLink class="btn btn-lg btn-primary btn-block" type="submit" href="/home" >Sign in</NavLink>

        <p class="mt-5 mb-3 text-muted">&copy; 2023</p>
    </EditForm>

    @if (IsLoading)
    {
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    }
</body>
</html>

@code {
    private string Email { get; set; }
    private string Password { get; set; }
    private bool RememberMe { get; set; }
    private bool IsLoading { get; set; } = false;

    private async Task HandleLogin()
    {
        IsLoading = true;

        // Simulate login process
        await Task.Delay(2000);

        // Dummy validation (replace with real validation logic)
        if (Email == "user@example.com" && Password == "password")
        {
            Navigation.NavigateTo("/home");
        }
        else
        {
            // Display error message (you can implement a more advanced error handling)
            Console.WriteLine("Invalid login attempt");
        }

        IsLoading = false;
    }
} 



